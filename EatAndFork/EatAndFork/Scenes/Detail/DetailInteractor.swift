//
//  DetailInteractor.swift
//  EatAndFork
//
//  Created by Visarut on 6/7/2566 BE.
//  Copyright (c) 2566 BE Newfml. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailBusinessLogic {
    func fetchData(request: Detail.FetchData.Request)
    func adjustItem(request: Detail.AdjustItem.Request)
    func addItemToCart(request: Detail.AddItemToCart.Request)
}

protocol DetailDataStore {
    var menuItem: MenuItem? { get set }
}

final class DetailInteractor: DetailBusinessLogic, DetailDataStore {
    var presenter: DetailPresentationLogic?
    var menuItem: MenuItem?
    
    private let cartManager: CartManagerProtocol = CartManager.shared

    private var numberOfItem = 1

    // MARK: Do something (and send response to DetailPresenter)
    
    func fetchData(request: Detail.FetchData.Request) {
        guard let menuItem = menuItem else { return }
        presenter?.presentData(
            response: .init(
                menuItem: menuItem,
                numberOfItemsInCart: cartManager.getNumberOfItems(),
                totalPrice: cartManager.getTotalPrice()
            )
        )
    }
    
    func adjustItem(request: Detail.AdjustItem.Request) {
        guard let menuItem = menuItem else { return }
        switch request.addItem {
        case .plus:
            numberOfItem += 1
        case .minus:
            guard numberOfItem > 1 else { return }
            numberOfItem -= 1
        }
        presenter?.presentAdjustItem(
            response: .init(
                menuItem: menuItem,
                numberOfItem: numberOfItem
            )
        )
    }
    
    func addItemToCart(request: Detail.AddItemToCart.Request) {
        guard let menuItem = menuItem else { return }
        cartManager.addItem(
            menuItemSelection: .init(
                menuItem: menuItem, selectedItem: numberOfItem
            )
        )
        presenter?.presentAddItemToCart(response: .init())
    }
}
