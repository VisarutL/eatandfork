//
//  DetailPresenter.swift
//  EatAndFork
//
//  Created by Visarut on 6/7/2566 BE.
//  Copyright (c) 2566 BE Newfml. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPresentationLogic {
    func presentData(response: Detail.FetchData.Response)
    func presentAdjustItem(response: Detail.AdjustItem.Response)
    func presentAddItemToCart(response: Detail.AddItemToCart.Response)
}

final class DetailPresenter: DetailPresentationLogic {
    weak var viewController: DetailDisplayLogic?

    func presentData(response: Detail.FetchData.Response) {
        viewController?.displayData(
            viewModel: .init(
                imageUrl: response.menuItem.imageUrl,
                title: response.menuItem.name,
                price: response.menuItem.price.description.baht(),
                description: response.menuItem.desc,
                numberOfMenuInCart: response.numberOfMenuInCart.description,
                totalPrice: Int(response.totalPrice).description.baht()
            )
        )
    }
    
    func presentAdjustItem(response: Detail.AdjustItem.Response) {
        viewController?.displayAdjustItem(
            viewModel: .init(
                totalItemPrice: (response.menuItem.price * response.numberOfItem).description.baht(),
                numberOfItem: response.numberOfItem
            )
        )
    }
    
    func presentAddItemToCart(response: Detail.AddItemToCart.Response) {
        viewController?.displayAddItemToCart(viewModel: .init())
    }
}
