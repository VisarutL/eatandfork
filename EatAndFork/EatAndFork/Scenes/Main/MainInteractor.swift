//
//  MainInteractor.swift
//  EatAndFork
//
//  Created by Visarut on 4/7/2566 BE.
//  Copyright (c) 2566 BE Newfml. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic {
    func fetchMemuItems(request: Main.FetchMenus.Request)
    func fetchCartItems(request: Main.FetchCart.Request)
}

protocol MainDataStore {
    var menuItems: [MenuItem] { get set }
}

final class MainInteractor: MainBusinessLogic, MainDataStore {
    var menuItems: [MenuItem] = []
    
    var presenter: MainPresentationLogic?
    private var worker: MainWorker = MainWorker()
    private let cartManager: CartManagerProtocol = CartManager.shared

    // MARK: Do something (and send response to MainPresenter)

    func fetchMemuItems(request: Main.FetchMenus.Request) {
        worker.fetchMenuItems { [weak self] response in
            self?.menuItems = response
            DispatchQueue.main.async {
                self?.presenter?.presentMenuItems(
                    response: .init(
                        menuItems: response,
                        cartItems: self?.cartManager.getAllItems() ?? []
                    )
                )
            }
        }
    }
    
    func fetchCartItems(request: Main.FetchCart.Request) {
        presenter?.presentMenuItems(
            response: .init(
                menuItems: menuItems,
                cartItems: cartManager.getAllItems()
            )
        )
        presenter?.presentCartItems(
            response: .init(
                totalPriceOfItems: cartManager.getTotalPrice(),
                isHiddenCheckoutButton: cartManager.getAllItems().isEmpty
            )
        )
    }
}
